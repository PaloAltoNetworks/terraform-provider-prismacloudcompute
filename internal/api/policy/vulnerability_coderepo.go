package policy

import (
	"fmt"
	"net/http"

	"github.com/PaloAltoNetworks/terraform-provider-prismacloudcompute/internal/api"
	"github.com/PaloAltoNetworks/terraform-provider-prismacloudcompute/internal/api/collection"
)

const (
	VulnerabilityCodereposEndpoint   = "api/v1/policies/vulnerability/coderepos"
	VulnerabilityCiCodereposEndpoint = "api/v1/policies/vulnerability/ci/coderepos"
)

type VulnerabilityCoderepoPolicy struct {
	Rules []VulnerabilityCoderepoRule `json:"rules,omitempty"`
	Type  string                      `json:"policyType,omitempty"`
}

type VulnerabilityCoderepoRule struct {
	AlertThreshold  VulnerabilityCoderepoThreshold       `json:"alertThreshold,omitempty"`
	BlockMessage    string                               `json:"blockMsg,omitempty"`
	BlockThreshold  VulnerabilityCoderepoThreshold       `json:"blockThreshold,omitempty"`
	Collections     []collection.Collection              `json:"collections,omitempty"`
	CreatePR        bool                                 `json:"createPR,omitempty"`
	CveRules        []VulnerabilityCoderepoCveRule       `json:"cveRules,omitempty"`
	Disabled        bool                                 `json:"disabled"`
	Effect          string                               `json:"effect,omitempty"`
	GraceDays       int                                  `json:"graceDays,omitempty"`
	GraceDaysPolicy VulnerabilityCoderepoGraceDaysPolicy `json:"graceDaysPolicy,omitempty"`
	Name            string                               `json:"name,omitempty"`
	Notes           string                               `json:"notes,omitempty"`
	OnlyFixed       bool                                 `json:"onlyFixed"`
	TagRules        []VulnerabilityCoderepoTagRule       `json:"tags,omitempty"`
	Verbose         bool                                 `json:"verbose"`
}

type VulnerabilityCoderepoCveRule struct {
	Description string                          `json:"description,omitempty"`
	Effect      string                          `json:"effect,omitempty"`
	Expiration  VulnerabilityCoderepoExpiration `json:"expiration,omitempty"`
	Id          string                          `json:"id,omitempty"`
}

type VulnerabilityCoderepoExpiration struct {
	Date    string `json:"date,omitempty"`
	Enabled bool   `json:"enabled"`
}

type VulnerabilityCoderepoTagRule struct {
	Description string                          `json:"description,omitempty"`
	Effect      string                          `json:"effect,omitempty"`
	Expiration  VulnerabilityCoderepoExpiration `json:"expiration,omitempty"`
	Name        string                          `json:"name,omitempty"`
}

type VulnerabilityCoderepoThreshold struct {
	Disabled bool `json:"disabled"`
	Enabled  bool `json:"enabled"`
	Value    int  `json:"value,omitempty"`
}

type VulnerabilityCoderepoGraceDaysPolicy struct {
	Enabled  bool `json:"enabled,omitempty"`
	Low      int  `json:"low,omitempty"`
	Medium   int  `json:"medium,omitempty"`
	High     int  `json:"high,omitempty"`
	Critical int  `json:"critical,omitempty"`
}

// Get the current CI coderepo vulnerability policy.
func GetVulnerabilityCiCoderepo(c api.Client) (VulnerabilityCoderepoPolicy, error) {
	var ans VulnerabilityCoderepoPolicy
	if err := c.Request(http.MethodGet, VulnerabilityCiCodereposEndpoint, nil, nil, &ans); err != nil {
		return ans, fmt.Errorf("error getting CI coderepo vulnerability policy: %s", err)
	}
	return ans, nil
}

// Get the current coderepo vulnerability policy.
func GetVulnerabilityCoderepo(c api.Client) (VulnerabilityCoderepoPolicy, error) {
	var ans VulnerabilityCoderepoPolicy
	if err := c.Request(http.MethodGet, VulnerabilityCodereposEndpoint, nil, nil, &ans); err != nil {
		return ans, fmt.Errorf("error getting coderepo vulnerability policy: %s", err)
	}
	return ans, nil
}

// Update the current CI coderepo vulnerability policy.
func UpdateVulnerabilityCiCoderepo(c api.Client, policy VulnerabilityCoderepoPolicy) error {
	return c.Request(http.MethodPut, VulnerabilityCiCodereposEndpoint, nil, policy, nil)
}

// Update the current coderepo vulnerability policy.
func UpdateVulnerabilityCoderepo(c api.Client, policy VulnerabilityCoderepoPolicy) error {
	return c.Request(http.MethodPut, VulnerabilityCodereposEndpoint, nil, policy, nil)
}
